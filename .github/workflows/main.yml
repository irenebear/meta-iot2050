name: CI

on:
  workflow_dispatch:
    inputs:
      build_debian_example_image:
        description: 'Build Debian example image'
        required: false
        default: true
        type: boolean
      build_debian_swupdate_image:
        description: 'Build Debian secure boot SWUpdate image'
        required: false
        default: true
        type: boolean
      build_bootloaders:
        description: 'Build bootloaders'
        required: false
        default: true
        type: boolean
  push:
    branches:
      - master
    tags:
      - '*'
    paths-ignore:
      - '**.md'
  pull_request:
    branches:
      - master
    types:
      - opened
      - synchronize
      - reopened
    paths-ignore:
      - '**.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  debian-example-image:
    name: Debian example image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Free Disk Space
        uses: ./.github/workflows/free-disk-space
      - name: Build image
        run: |
          ./kas-container build kas-iot2050-example.yml
          ./kas-container build kas-iot2050-example.yml:kas-iot2050-qemu.yml
      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: iot2050-example-image
          path: |
            build/tmp/deploy/images/iot2050/iot2050-image-example-iot2050-debian-iot2050.wic
            build/tmp/deploy/images/iot2050/iot2050-image-example-iot2050-debian-iot2050.wic.bmap

  debian-swupdate-image:
    name: Debian secure boot SWUpdate image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Free Disk Space
        uses: ./.github/workflows/free-disk-space
      - name: Mock EIO binary stubs
        run: |
          touch ./recipes-app/iot2050-eio-manager/files/bin/iot2050-eiofsd
          touch ./recipes-app/iot2050-eio-manager/files/bin/map3-fw.bin
          touch ./recipes-app/iot2050-eio-manager/files/bin/firmware-version
      - name: Build image
        run: |
          ./kas-container build kas-iot2050-swupdate.yml:kas/opt/secure-boot.yml:kas/opt/preempt-rt.yml:kas/opt/eio.yml:kas/opt/module.yml:kas/opt/meta-hailo.yml
          ./kas-container build kas-iot2050-swupdate.yml:kas-iot2050-qemu.yml
      - name: Upload image
        uses: actions/upload-artifact@v4
        with:
          name: iot2050-secureboot-swu-image
          path: |
            build/tmp/deploy/images/iot2050/iot2050-image-swu-example-iot2050-debian-iot2050.wic
            build/tmp/deploy/images/iot2050/iot2050-image-swu-example-iot2050-debian-iot2050.wic.bmap

  bootloaders:
    name: Bootloaders
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Free Disk Space
        uses: ./.github/workflows/free-disk-space
      - name: Build bootloader image
        run: ./kas-container build kas-iot2050-boot.yml
      - name: Archive bootloaders
        uses: actions/upload-artifact@v4
        with:
          name: iot2050-bootloaders
          path: build/tmp/deploy/images/iot2050/*.bin



  oss-clearing-sbom:
    name: OSS Clearing SBOM (ScanCode only)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free Disk Space
        uses: ./.github/workflows/free-disk-space

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Download ScanCode Toolkit
        run: |
          wget https://github.com/aboutcode-org/scancode-toolkit/releases/download/v32.4.1/scancode-toolkit-v32.4.1_py3.10-linux.tar.gz
          tar -xzf scancode-toolkit-v32.4.1_py3.10-linux.tar.gz
          rm -f scancode-toolkit-v32.4.1_py3.10-linux.tar.gz

      - name: Configure ScanCode Toolkit
        run: |
          cd scancode-toolkit-*/ && ./configure --python "$pythonLocation/bin/python"

      - name: Generate SBOM with ScanCode Toolkit
        run: |
          cd scancode-toolkit-*/ && \
            ./scancode \
              --license --package --copyright --info \
              --ignore "scancode-toolkit-*" \
              --spdx-tv ../sbom-scancode.spdx .. \
              2>&1 | tee ../scancode-scan.log

      - name: Upload ScanCode SBOM artifacts
        uses: actions/upload-artifact@v4
        with:
          name: scancode-sbom-results
          path: |
            sbom-scancode.spdx
            scancode-scan.log

  ort:
    name: OSS Clearing SBOM (ORT)
    runs-on: ubuntu-latest
    steps:
      - name: Use HTTPS instead of SSH for Git cloning
        run: git config --global url.https://github.com/.insteadOf ssh://git@github.com/
      - name: Checkout project
        uses: actions/checkout@v4
      - name: Run ORT Scan
        uses: oss-review-toolkit/ort-ci-github-action@v1
      - name: Upload ORT results
        uses: actions/upload-artifact@v4
        with:
          name: ort-results
          path: |
            ort-results/**/*



